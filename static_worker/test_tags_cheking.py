# # –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏:
# def show_answer(message):
#     # –¢–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞ "–î–∞":
#     TEXT_BUTTON_YES = "–î–∞ " + emoji.emojize("‚úÖ")
#
#     # –¢–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞ "–ù–µ—Ç":
#     TEXT_BUTTON_NO = "–ù–µ—Ç " + emoji.emojize("‚ùå")
#
#     isFoundTag, tag = tags_cheking.tag_finder(message.text)
#     if isFoundTag:
#         # –ó–∞–ø–∏—Å—å –∫–æ–Ω–µ—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–≥–∞:
#         buff_message = ""
#         if tag == "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
#             buff_message = emoji.emojize(":bar_chart:") + " –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?"
#             button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='yes_stat',
#                                                             parse_mode="Markdown")
#         elif tag == "–Ω–æ–≤–æ—Å—Ç–∏":
#             buff_message = emoji.emojize(":bookmark_tabs:") + " –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏?"
#             button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='yes_news',
#                                                             parse_mode="Markdown")
#         elif tag == "—Å–∏–º–ø—Ç–æ–º—ã":
#             buff_message = emoji.emojize("ü§ï") + " –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ —Å–∏–º–ø—Ç–æ–º–∞—Ö COVID-19?"
#             button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='yes_symptoms',
#                                                             parse_mode="Markdown")
#         elif tag == "–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞":
#             buff_message = emoji.emojize("üò∑") + " –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏?"
#             button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='yes_prevention',
#                                                             parse_mode="Markdown")
#         elif tag == "–≤–æ–ø—Ä–æ—Å—ã":
#             buff_message = emoji.emojize("‚ÅâÔ∏è") + " –ü–æ–∫–∞–∑–∞—Ç—å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã?"
#             button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='yes_questions',
#                                                             parse_mode="Markdown")
#         elif tag == "—Ñ–∞–∫—Ç":
#             buff_message = emoji.emojize("ü§î") + " –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç?"
#             button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='yes_fact',
#                                                             parse_mode="Markdown")
#         elif tag == "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏":
#             buff_message = emoji.emojize("ü§î") + " –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤?"
#             button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='yes_develop',
#                                                             parse_mode="Markdown")
#
#         # –í—ã–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞ –∏ –¥–≤—É—Ö –∫–Ω–æ–ø–æ–∫ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç":
#         keyboard_YES_NO = telebot.types.InlineKeyboardMarkup()
#         button_NO = telebot.types.InlineKeyboardButton(TEXT_BUTTON_NO, callback_data='no', parse_mode="Markdown")
#         keyboard_YES_NO.row(button_YES, button_NO)
#         bot.send_message(message.from_user.id, buff_message, reply_markup=keyboard_YES_NO)
#     else:
#         TEXT_ERROR_MESSAGE = text_creator.get_text("error")
#         bot.send_message(message.from_user.id, TEXT_ERROR_MESSAGE)
#
#
# @bot.message_handler(content_types=['text'])
# @bot.callback_query_handler(func=lambda call: True)
# def callback_data(call):
#     if call.data == "no":
#         TEXT_ERROR_MESSAGE = text_creator.get_text("error")
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_ERROR_MESSAGE)
#     elif call.data == "yes_stat":
#         TEXT_STATISTIC_MESSAGE = emoji.emojize(
#             "üìä") + " –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏ –≤–≤–µ–¥–∏—Ç–µ: \"/stat\""
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_STATISTIC_MESSAGE, parse_mode="Markdown")
#     elif call.data == "yes_news":
#         TEXT_NEWS_MESSAGE = emoji.emojize(
#             "üìë") + " –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤–≤–µ–¥–∏—Ç–µ: \"/news\""
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_NEWS_MESSAGE, parse_mode="Markdown")
#     elif call.data == "yes_symptoms":
#         TEXT_SYMPTOMS_MESSAGE = emoji.emojize(
#             "ü§ï") + " –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–∏–º–ø—Ç–æ–º—ã COVID-19 –≤–≤–µ–¥–∏—Ç–µ: \"/symptoms\""
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_SYMPTOMS_MESSAGE, parse_mode="Markdown")
#     elif call.data == "yes_prevention":
#         TEXT_PREVENTION_MESSAGE = emoji.emojize(
#             "üò∑") + " –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫—É COVID-19 –≤–≤–µ–¥–∏—Ç–µ: \"/prevention\""
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_PREVENTION_MESSAGE, parse_mode="Markdown")
#     elif call.data == "yes_questions":
#         TEXT_QUESTIONS_MESSAGE = emoji.emojize(
#             "‚ÅâÔ∏è") + " –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤–≤–µ–¥–∏—Ç–µ: \"/questions\""
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_QUESTIONS_MESSAGE, parse_mode="Markdown")
#     elif call.data == "yes_fact":
#         TEXT_FACT_MESSAGE = emoji.emojize(
#             "ü§î") + " –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –≤–≤–µ–¥–∏—Ç–µ: \"/fact\""
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_FACT_MESSAGE, parse_mode="Markdown")
#     elif call.data == "yes_develop":
#         TEXT_DEVELOP_MESSAGE = emoji.emojize(
#             "üßë‚Äçüíª") + " –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –≤–≤–µ–¥–∏—Ç–µ: \"/develop\""
#         bot.send_message(chat_id=call.message.chat.id, text=TEXT_DEVELOP_MESSAGE, parse_mode="Markdown")
#

import requests
from bs4 import BeautifulSoup
import json
import emoji

# –î–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ COVID-19 –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç –∫—É–¥–∞ –±–µ—Ä–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
URL = 'https://news.google.com/covid19/map?hl=ru&gl=RU&ceid=RU%3Aru'
response = requests.get(URL)
soup = BeautifulSoup(response.content, 'html.parser')


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –º–∏—Ä—É —Å –ø–æ–º–æ—â—å—é BeautifulSoup:
def get_statistic_world():
    world_statistic = []

    all_sick = 0
    a_day = 1
    death = 4
    tags = soup.find_all('div', {'class': 'pcAJd'})
    values = soup.find_all('td', {'class': 'l3HOY'})

    for tag in tags:
        statistic = {'country': tag.text.replace(u'\xa0', ' '),
                     "info": {'all_sick': values[all_sick].text.replace(u'\xa0', ' '),
                              'sick_per_day': values[a_day].text.replace(u'\xa0', ' '),
                              'all_deaths': values[death].text.replace(u'\xa0', ' ')}}
        world_statistic.append(statistic)
        all_sick += 5
        a_day += 5
        death += 5

    with open("BS_worker/statistic/world/world_stat.json", 'w', encoding='utf-8') as write_file:
        json.dump(world_statistic, write_file)

    message_all, message_countries = show_stat_world()
    return message_all, message_countries


# –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π:
def show_stat_world():
    message = emoji.emojize("üåé") + " –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏ –ø–æ *–ú–∏—Ä—É*: \n" + " \n"
    message_countries = emoji.emojize("üß≠") + " –¢–û–ü-10 *—Å—Ç—Ä–∞–Ω* –ø–æ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏: \n" + " \n"
    buff_counter = 1

    with open("BS_worker/statistic/world/world_stat.json", "r", encoding="utf-8") as file:
        statistic = json.load(file)
        for stat in statistic:
            if stat["country"] == "–í–µ—Å—å –º–∏—Ä":
                all_sick = stat["info"]["all_sick"]
                sick_per_day = stat["info"]["sick_per_day"]
                all_deaths = stat["info"]["all_deaths"]
                message += "*–í—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è:* " + all_sick + "\n"
                message += "*–°–ª—É—á–∞–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å:* " + sick_per_day + "\n"
                message += "*–í—Å–µ —Å–ª—É—á–∞–∏ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞:* " + all_deaths + "\n"

            if stat["country"] != "–í–µ—Å—å –º–∏—Ä" and buff_counter <= 10:
                name_region = stat["country"]
                all_sick = stat["info"]["all_sick"]
                sick_per_day = stat["info"]["sick_per_day"]
                all_deaths = stat["info"]["all_deaths"]
                emoji_of_country = get_emoji_country(name_region)
                message_countries += emoji_of_country + " *" + name_region + "*: " + "\n"
                message_countries += "–í—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è: " + all_sick + "; " + "\n"
                message_countries += "–°–ª—É—á–∞–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å: " + sick_per_day + "; " + "\n"
                message_countries += "–í—Å–µ —Å–ª—É—á–∞–∏ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞: " + all_deaths + "; " + "\n"

                buff_counter += 1

    return message, message_countries


# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞ —Å—Ç—Ä–∞–Ω—ã –ø–æ –µ–µ –Ω–∞–∑–≤–∞–Ω–∏—é:
def get_emoji_country(name_region):
    if name_region == "–°–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –®—Ç–∞—Ç—ã –ê–º–µ—Ä–∏–∫–∏":
        return "üá∫üá∏"
    elif name_region == "–ò–Ω–¥–∏—è":
        return "üáÆüá≥"
    elif name_region == "–ë—Ä–∞–∑–∏–ª–∏—è":
        return "üáßüá∑"
    elif name_region == "–§—Ä–∞–Ω—Ü–∏—è":
        return "üá´üá∑"
    elif name_region == "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è":
        return "üá¨üáß"
    elif name_region == "–ì–µ—Ä–º–∞–Ω–∏—è":
        return "üá©üá™"
    elif name_region == "–†–æ—Å—Å–∏—è":
        return "üá∑üá∫"
    elif name_region == "–¢—É—Ä—Ü–∏—è":
        return "üáπüá∑"
    elif name_region == "–ò—Ç–∞–ª–∏—è":
        return "üáÆüáπ"
    elif name_region == "–ò—Å–ø–∞–Ω–∏—è":
        return "üá™üá∏"
    elif name_region == "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞":
        return "üá¶üá∑"
    elif name_region == "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã":
        return "üá≥üá±"
    elif name_region == "–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è":
        return "üá∞üá∑"
    else:
        return "üåê"

import requests
from bs4 import BeautifulSoup
import json
import emoji

# –î–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ covid_19_worker –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç –∫—É–¥–∞ –±–µ—Ä–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
URL_minfin = 'https://index.minfin.com.ua/reference/coronavirus/geography/'

response = requests.get(URL_minfin)
soup = BeautifulSoup(response.content, 'html.parser')


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –º–∏—Ä—É —Å –ø–æ–º–æ—â—å—é BeautifulSoup:
def get_statistic_world():
    world_statistic = []

    all_sick = 0
    sick_a_day = 1
    all_deaths = 2
    death_a_day = 3
    all_healed = 4
    healed_a_day = 5

    table = soup.find('table')
    values_world = table.find_all('td', class_='bg-total')
    countries = table.find_all('a', limit=24)
    countries = countries[4:]
    values = table.find_all('td', class_='blank')

    general_stat = {'country': values_world[0].text.replace(u'\xa0', ' '),
                    "info": {
                        'all_sick': values_world[1].text.replace(u'\xa0', ' '),
                        'sick_a_day': values_world[2].text.replace(u'\xa0',
                                                                   ' '),
                        'all_deaths': values_world[3].text.replace(u'\xa0',
                                                                   ' '),
                        'death_a_day': values_world[4].text.replace(u'\xa0',
                                                                    ' '),
                        'all_healed': values_world[5].text.replace(u'\xa0',
                                                                   ' '),
                        'healed_a_day': values_world[6].text.replace(u'\xa0',
                                                                     ' ')
                    }
                    }
    world_statistic.append(general_stat)

    for country in countries:
        statistic = {'country': country.text,
                     "info": {
                         'all_sick': values[all_sick].text.replace(u'\xa0',
                                                                   ' '),
                         'sick_a_day': values[sick_a_day].text.replace(u'\xa0',
                                                                       ' '),
                         'all_deaths': values[all_deaths].text.replace(u'\xa0',
                                                                       ' '),
                         'death_a_day': values[death_a_day].text.replace(
                             u'\xa0', ' '),
                         'all_healed': values[all_healed].text.replace(u'\xa0',
                                                                       ' '),
                         'healed_a_day': values[healed_a_day].text.replace(
                             u'\xa0', ' ')
                     }
                     }

        world_statistic.append(statistic)

        all_sick += 7
        sick_a_day += 7
        all_deaths += 7
        death_a_day += 7
        all_healed += 7
        healed_a_day += 7

    with open("covid_19_worker/BS_worker/statistic/world/world_stat.json", 'w',
              encoding='utf-8') as write_file:
        json.dump(world_statistic, write_file)


# –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π:
def show_stat_world():
    message_countries = emoji.emojize(
        "üß≠") + " –¢–û–ü-10 *—Å—Ç—Ä–∞–Ω* –ø–æ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏: \n" + " \n"
    buff_counter = 1

    with open("covid_19_worker/BS_worker/statistic/world/world_stat.json", "r",
              encoding="utf-8") as file:
        statistic = json.load(file)
        for stat in statistic:
            if stat["country"] != "–í–µ—Å—å –º–∏—Ä" and buff_counter <= 10:
                name_region = stat["country"]
                all_sick = stat["info"]["all_sick"]
                sick_a_day = stat["info"]["sick_a_day"]
                all_deaths = stat["info"]["all_deaths"]
                death_a_day = stat["info"]["death_a_day"]
                all_healed = stat["info"]["all_healed"]
                healed_a_day = stat["info"]["healed_a_day"]
                emoji_of_country = get_emoji_country(name_region)
                message_countries += emoji_of_country + " *" + name_region + "*: " + "\n"
                message_countries += "–í—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è: " + all_sick + "; " + "\n"
                message_countries += "–°–ª—É—á–∞–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å: " + sick_a_day + "; " + "\n"
                message_countries += "–í—Å–µ —Å–ª—É—á–∞–∏ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞: " + all_deaths + "; " + "\n"
                message_countries += "C–ª—É—á–∞–∏ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞ –∑–∞ –¥–µ–Ω—å: " + death_a_day + "; " + "\n"
                message_countries += "–í—Å–µ —Å–ª—É—á–∞–∏ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è: " + all_healed + "; " + "\n"
                message_countries += "–°–ª—É—á–∞–∏ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è –∑–∞ –¥–µ–Ω—å: " + healed_a_day + "; " + "\n"
                buff_counter += 1

    return message_countries


# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞ —Å—Ç—Ä–∞–Ω—ã –ø–æ –µ–µ –Ω–∞–∑–≤–∞–Ω–∏—é:
def get_emoji_country(name_region):
    if name_region == "–°–®–ê":
        return "üá∫üá∏"
    elif name_region == "–ò–Ω–¥–∏—è":
        return "üáÆüá≥"
    elif name_region == "–ë—Ä–∞–∑–∏–ª–∏—è":
        return "üáßüá∑"
    elif name_region == "–§—Ä–∞–Ω—Ü–∏—è":
        return "üá´üá∑"
    elif name_region == "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è":
        return "üá¨üáß"
    elif name_region == "–ì–µ—Ä–º–∞–Ω–∏—è":
        return "üá©üá™"
    elif name_region == "–†–æ—Å—Å–∏—è":
        return "üá∑üá∫"
    elif name_region == "–¢—É—Ä—Ü–∏—è":
        return "üáπüá∑"
    elif name_region == "–ò—Ç–∞–ª–∏—è":
        return "üáÆüáπ"
    elif name_region == "–ò—Å–ø–∞–Ω–∏—è":
        return "üá™üá∏"
    elif name_region == "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞":
        return "üá¶üá∑"
    elif name_region == "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã":
        return "üá≥üá±"
    elif name_region == "–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è":
        return "üá∞üá∑"
    else:
        return "üåê"

import requests
from bs4 import BeautifulSoup
import json
import emoji

# –î–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ covid_19_worker –ø–æ –†–æ—Å—Å–∏–∏.

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç –∫—É–¥–∞ –±–µ—Ä–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
URL = 'https://coronavirus-monitor.info/'
response = requests.get(URL)
soup = BeautifulSoup(response.content, 'html.parser')


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –†–§ —Å –ø–æ–º–æ—â—å—é BeautifulSoup:
def get_statistic_russia():
    russia_statistic = []

    sick = 4
    death = 5
    healed = 0

    tags = soup.find_all('div', {'class': 'flex-row first'}, limit=15)
    sick_and_death = soup.find_all('div', {'class': 'flex-row flex-row'})
    healed_ls = soup.find_all('div', {'class': 'flex-row flex-row cured'})
    tags = tags[1:]

    for tag in tags:
        statistic = {'country': tag.text.replace(u'\xa0', ' '),
                     "info": {
                         'all_sick': sick_and_death[sick].text[
                                     :sick_and_death[sick].text.find('+')],
                         'sick_a_day': sick_and_death[sick].text[
                                       sick_and_death[sick].text.find('+'):],
                         'all_deaths': sick_and_death[death].text[
                                       :sick_and_death[death].text.find('+')],
                         'death_a_day': sick_and_death[death].text[
                                        sick_and_death[death].text.find('+'):],
                         'all_healed': healed_ls[healed].text[
                                       :healed_ls[healed].text.find('+')],
                         'healed_a_day': healed_ls[healed].text[
                                         healed_ls[healed].text.find('+'):]
                     }
                     }
        russia_statistic.append(statistic)
        sick += 3
        death += 3
        healed += 1

    with open("covid_19_worker/BS_worker/statistic/russia/russia_stat.json",
              'w',
              encoding='utf-8') as write_file:
        json.dump(russia_statistic, write_file)


# –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º –∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π:
def show_stat_russia():
    message = emoji.emojize(
        "üá∑üá∫") + " –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏ –ø–æ *–†–æ—Å—Å–∏–∏*:" + "\n" + " " + "\n"
    message_region = emoji.emojize(
        "üß≠") + " –¢–û–ü-10 *–æ–±–ª–∞—Å—Ç–µ–π –∏ —Ä–µ–≥–∏–æ–Ω–æ–≤* –ø–æ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏:" + "\n" + " " + "\n"
    buff_counter = 1

    with open("covid_19_worker/BS_worker/statistic/russia/russia_stat.json",
              "r",
              encoding='utf-8') as file:
        statistic_r = json.load(file)
        for stat in statistic_r:
            if stat["country"] != "–†–æ—Å—Å–∏—è" and stat["country"] != "–í–µ—Å—å –º–∏—Ä" \
                    and buff_counter <= 10:
                name_region = stat["country"]
                all_sick = stat["info"]["all_sick"]
                sick_per_day = stat["info"]["sick_a_day"]
                all_deaths = stat["info"]["all_deaths"]
                death_a_day = stat["info"]["death_a_day"]
                all_healed = stat["info"]["all_healed"]
                healed_a_day = stat["info"]["healed_a_day"]
                message_region += "*" + str(
                    buff_counter) + ". " + name_region + ":* " + "\n"
                message_region += "–í—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è: " + all_sick + "; " + "\n"
                message_region += "–°–ª—É—á–∞–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å: " + sick_per_day + "; " + "\n"
                message_region += "–í—Å–µ —Å–ª—É—á–∞–∏ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞: " + all_deaths + "; " + "\n"
                message_region += "–°–ª—É—á–∞–µ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞ –∑–∞ –¥–µ–Ω—å: " + death_a_day + "; " + "\n"
                message_region += "–í—Å–µ —Å–ª—É—á–∞–∏ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è: " + all_healed + "; " + "\n"
                message_region += "–°–ª—É—á–∞–µ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è –∑–∞ –¥–µ–Ω—å: " + healed_a_day + "; " + "\n"
                buff_counter += 1

    with open("covid_19_worker/BS_worker/statistic/world/world_stat.json", "r",
              encoding="utf-8") as file:
        statistic_w = json.load(file)
        for stat in statistic_w:
            if stat["country"] == "–†–æ—Å—Å–∏—è":
                name_region = stat["country"]
                all_sick = stat["info"]["all_sick"]
                sick_a_day = stat["info"]["sick_a_day"]
                all_deaths = stat["info"]["all_deaths"]
                death_a_day = stat["info"]["death_a_day"]
                all_healed = stat["info"]["all_healed"]
                healed_a_day = stat["info"]["healed_a_day"]
                message += " *" + name_region + "*: " + "\n"
                message += "–í—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è: " + all_sick + "; " + "\n"
                message += "–°–ª—É—á–∞–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å: " + sick_a_day + "; " + "\n"
                message += "–í—Å–µ —Å–ª—É—á–∞–∏ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞: " + all_deaths + "; " + "\n"
                message += "C–ª—É—á–∞–∏ –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞ –∑–∞ –¥–µ–Ω—å: " + death_a_day + "; " + "\n"
                message += "–í—Å–µ —Å–ª—É—á–∞–∏ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è: " + all_healed + "; " + "\n"
                message += "–°–ª—É—á–∞–∏ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è –∑–∞ –¥–µ–Ω—å: " + healed_a_day + "; " + "\n"

    return message, message_region

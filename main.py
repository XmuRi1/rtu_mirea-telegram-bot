import telebot
import emoji
from telebot import types
from JSON_worker.question import questions_creator
from JSON_worker.fact import facts_creator
from JSON_worker.text import text_creator

# –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞:
token = '5219565252:AAETCFyyTmY3ioY6yQr56Eiz5iTSdJ5jl4s'
bot = telebot.TeleBot(token)

# –¢–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–¥–∞—á:
TEXT_BUTTON_TASKS = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏ " + emoji.emojize(":card_index_dividers:")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"
# –∏ –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏:
@bot.message_handler(commands=['start'])
def menu(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_tasks = types.KeyboardButton(text=TEXT_BUTTON_TASKS)
    keyboard.add(button_tasks)
    START_MESSAGE = text_creator.get_text("start_message")
    bot.send_message(message.from_user.id, START_MESSAGE, reply_markup=keyboard)


# –ú–µ—Ç–æ–¥ "–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è" —á–∞—Ç–∞:
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == TEXT_BUTTON_TASKS:
        show_bot_tasks(message)
    elif message.text == "/stat":
        bot.send_message(message.from_user.id, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
    elif message.text == "/symptoms":
        show_symptoms(message)
    elif message.text == "/prevention":
        show_prevention(message)
    elif message.text == "/questions":
        show_questions(message)
    elif message.text == "/news":
        bot.send_message(message.from_user.id, "–ù–æ–≤–æ—Å—Ç–∏: –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
    elif message.text == "/develop":
        show_develop(message)
    elif message.text == "/fact":
        show_fact(message)
    else:
        TEXT_ERROR_MESSAGE = text_creator.get_text("error")
        bot.send_message(message.from_user.id, TEXT_ERROR_MESSAGE)


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞—á:
def show_bot_tasks(message):
    TEXT_TASKS = text_creator.get_text("tasks")
    bot.send_message(message.from_user.id, TEXT_TASKS, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤ COVID-19:
def show_symptoms(message):
    TEXT_SYMPTOMS = text_creator.get_text("symptoms")
    bot.send_message(message.from_user.id, TEXT_SYMPTOMS, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ COVID-19:
def show_prevention(message):
    TEXT_PREVENTION = text_creator.get_text("prevention")
    bot.send_message(message.from_user.id, TEXT_PREVENTION, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:
def show_develop(message):
    TEXT_DEVELOP = text_creator.get_text("develop")
    bot.send_message(message.from_user.id, TEXT_DEVELOP, parse_mode="Markdown",
                     disable_web_page_preview=True)


# –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:
def show_questions(message):
    TEXT_QUESTIONS = questions_creator.questions_print()
    bot.send_message(message.from_user.id, TEXT_QUESTIONS, parse_mode="Markdown")
    show_answers(message)


# –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –æ–¥–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞:
def show_fact(message):
    TEXT_FACT = facts_creator.facts_print()
    bot.send_message(message.from_user.id, TEXT_FACT, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å:
def show_answers(message):
    buff_message = emoji.emojize(":keyboard:") + " –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É."
    keyboard_answers = telebot.types.InlineKeyboardMarkup()

    numbers = [1, 2, 3, 4, 5]
    for j in range(5):
        buff_button_one = telebot.types.InlineKeyboardButton(str(numbers[0]), callback_data=str(numbers[0]),
                                                             parse_mode="Markdown")
        buff_button_two = telebot.types.InlineKeyboardButton(str(numbers[1]), callback_data=str(numbers[1]),
                                                             parse_mode="Markdown")
        buff_button_three = telebot.types.InlineKeyboardButton(str(numbers[2]), callback_data=str(numbers[2]),
                                                               parse_mode="Markdown")
        buff_button_four = telebot.types.InlineKeyboardButton(str(numbers[3]), callback_data=str(numbers[3]),
                                                              parse_mode="Markdown")
        buff_button_five = telebot.types.InlineKeyboardButton(str(numbers[4]), callback_data=str(numbers[4]),
                                                              parse_mode="Markdown")
        keyboard_answers.row(buff_button_one, buff_button_two, buff_button_three, buff_button_four, buff_button_five)

        for i in range(5):
            numbers[i] += 5

    bot.send_message(message.from_user.id, buff_message, reply_markup=keyboard_answers)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É:
@bot.callback_query_handler(func=lambda call: True)
def callback_data(call):
    number_of_question = call.data
    answer, question = questions_creator.answers_print(number_of_question)
    message = "‚ÅâÔ∏è *–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å ‚Ññ" + number_of_question + ":* " + question + "\n" + " " + "\n" + answer + \
              "\n" + " " + "\n" + "ü§§ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å."
    bot.send_message(chat_id=call.message.chat.id, text=message, parse_mode="Markdown")


# –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
bot.polling(none_stop=True, interval=0)

import telebot
import emoji
from telebot import types
from static_worker import tags_cheking
from JSON_worker.question import questions_creator
from JSON_worker.fact import facts_creator
from JSON_worker.text import text_creator

# –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞:
token = '5219565252:AAETCFyyTmY3ioY6yQr56Eiz5iTSdJ5jl4s'
bot = telebot.TeleBot(token)

# –¢–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–¥–∞—á:
TEXT_BUTTON_TASKS = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏ " + emoji.emojize(":card_index_dividers:")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"
# –∏ –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏:
@bot.message_handler(commands=['start'])
def menu(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_tasks = types.KeyboardButton(text=TEXT_BUTTON_TASKS)
    keyboard.add(button_tasks)
    START_MESSAGE = text_creator.get_text("start_message")
    bot.send_message(message.from_user.id, START_MESSAGE, reply_markup=keyboard)


# –ú–µ—Ç–æ–¥ "–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è" —á–∞—Ç–∞:
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == TEXT_BUTTON_TASKS:
        show_bot_tasks(message)
    elif message.text == "/stat":
        bot.send_message(message.from_user.id, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
    elif message.text == "/symptoms":
        show_symptoms(message)
    elif message.text == "/prevention":
        show_prevention(message)
    elif message.text == "/questions":
        show_questions(message)
    elif message.text == "/news":
        bot.send_message(message.from_user.id, "–ù–æ–≤–æ—Å—Ç–∏: –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
    elif message.text == "/develop":
        show_develop(message)
    elif message.text == "/fact":
        show_fact(message)
    else:
        show_answer(message)


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞—á:
def show_bot_tasks(message):
    TEXT_TASKS = text_creator.get_text("tasks")
    bot.send_message(message.from_user.id, TEXT_TASKS, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤ COVID-19:
def show_symptoms(message):
    TEXT_SYMPTOMS = text_creator.get_text("symptoms")
    bot.send_message(message.from_user.id, TEXT_SYMPTOMS, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ COVID-19:
def show_prevention(message):
    TEXT_PREVENTION = text_creator.get_text("prevention")
    bot.send_message(message.from_user.id, TEXT_PREVENTION, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:
def show_develop(message):
    TEXT_DEVELOP = text_creator.get_text("develop")
    bot.send_message(message.from_user.id, TEXT_DEVELOP, parse_mode="Markdown",
                     disable_web_page_preview=True)


# –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:
def show_questions(message):
    TEXT_QUESTIONS = questions_creator.questions_print()
    bot.send_message(message.from_user.id, TEXT_QUESTIONS, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –æ–¥–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞:
def show_fact(message):
    TEXT_FACT = facts_creator.facts_print()
    bot.send_message(message.from_user.id, TEXT_FACT, parse_mode="Markdown")


# –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏:
def show_answer(message):
    # –¢–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞ "–î–∞":
    TEXT_BUTTON_YES = "–î–∞ " + emoji.emojize("‚úÖ")

    # –¢–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞ "–ù–µ—Ç":
    TEXT_BUTTON_NO = "–ù–µ—Ç " + emoji.emojize("‚ùå")

    isFoundTag, tag = tags_cheking.tag_finder(message.text)
    if isFoundTag:
        # –ó–∞–ø–∏—Å—å –∫–æ–Ω–µ—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–≥–∞:
        buff_message = ""
        if tag == "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
            buff_message = emoji.emojize(":bar_chart:") + " –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?"
        elif tag == "–Ω–æ–≤–æ—Å—Ç–∏":
            buff_message = emoji.emojize(":bookmark_tabs:") + " –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏?"
        elif tag == "—Å–∏–º–ø—Ç–æ–º—ã":
            buff_message = emoji.emojize("ü§ï") + " –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ —Å–∏–º–ø—Ç–æ–º–∞—Ö COVID-19?"
        elif tag == "–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞":
            buff_message = emoji.emojize("üò∑") + " –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏?"
        elif tag == "–≤–æ–ø—Ä–æ—Å—ã":
            buff_message = emoji.emojize("‚ÅâÔ∏è") + " –ü–æ–∫–∞–∑–∞—Ç—å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã?"
        elif tag == "—Ñ–∞–∫—Ç":
            buff_message = emoji.emojize("ü§î") + " –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç?"
        elif tag == "—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏":
            buff_message = emoji.emojize("ü§î") + " –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤?"

        # –í—ã–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞ –∏ –¥–≤—É—Ö –∫–Ω–æ–ø–æ–∫ "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç":
        keyboard_YES_NO = telebot.types.InlineKeyboardMarkup()
        button_YES = telebot.types.InlineKeyboardButton(TEXT_BUTTON_YES, callback_data='1',
                                                        parse_mode="Markdown")
        button_NO = telebot.types.InlineKeyboardButton(TEXT_BUTTON_NO, callback_data='2',
                                                       parse_mode="Markdown")
        keyboard_YES_NO.row(button_YES, button_NO)
        bot.send_message(message.from_user.id, buff_message,
                         reply_markup=keyboard_YES_NO)
    else:
        TEXT_ERROR_MESSAGE = text_creator.get_text("error")
        bot.send_message(message.from_user.id, TEXT_ERROR_MESSAGE)


# –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
bot.polling(none_stop=True, interval=0)
